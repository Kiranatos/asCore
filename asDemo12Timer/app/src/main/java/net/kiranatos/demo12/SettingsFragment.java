package net.kiranatos.demo12;

import android.content.SharedPreferences;
import android.os.Bundle;
import android.util.Log;
import android.widget.Toast;

import androidx.preference.PreferenceFragmentCompat;
import androidx.preference.Preference;
import androidx.preference.PreferenceScreen;
import androidx.preference.CheckBoxPreference;
import androidx.preference.EditTextPreference;
import androidx.preference.ListPreference;

/* {1}: - –¥—É–±–ª—é—î—Ç—å—Å—è, –±–æ –≤–∏–∫–æ–Ω—É—é—Ç—å—Å—è –≤ —Ä—ñ–∑–Ω–∏–π —á–∞—Å: –æ–¥–∏–Ω ‚Äî –ø—Ä–∏ —Å—Ç–∞—Ä—Ç—ñ, –¥—Ä—É–≥–∏–π ‚Äî –ø—Ä–∏ –∑–º—ñ–Ω—ñ.

        onCreatePreferences(...) - –º–µ—Ç–æ–¥ –≤–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è –æ–¥–∏–Ω —Ä–∞–∑, –∫–æ–ª–∏ Preferences —Ç—ñ–ª—å–∫–∏ —Å—Ç–≤–æ—Ä—é—é—Ç—å—Å—è.
        –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è, —â–æ–±: –ø—ñ—Å–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è PreferenceScreen - –≤—è—Ç–∏ –ø–æ—Ç–æ—á–Ω—ñ –∑–Ω–∞—á–µ–Ω–Ω—è –∑ SharedPreferences.
        –Ü –≤—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ –ø–æ—á–∞—Ç–∫–æ–≤—ñ summary –¥–ª—è ListPreference, EditTextPreference. –Ø–∫—â–æ –Ω–µ –∑—Ä–æ–±–∏—Ç–∏ —Ü–µ ‚Äî
        –ø—ñ–¥–ø–∏—Å—ñ–≤ (summary) –ø—ñ–¥ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è–º–∏ –Ω–µ –±—É–¥–µ –≤–∏–¥–Ω–æ –æ–¥—Ä–∞–∑—É.
        –¢—É—Ç {1} —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î –∑–Ω–∞—á–µ–Ω–Ω—è (–ø–æ–∫–∞–∑—É—î summary –ø—Ä–∏ –≤—ñ–¥–∫—Ä–∏—Ç—Ç—ñ –µ–∫—Ä–∞–Ω–∞).

        –í onSharedPreferenceChanged(...) - –º–µ—Ç–æ–¥ –≤–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è –∫–æ–∂–Ω–æ–≥–æ —Ä–∞–∑—É, –∫–æ–ª–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –∑–º—ñ–Ω—é—î –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è.
        –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è, —â–æ–±: –≤—ñ–¥—Å—Ç–µ–∂–∏—Ç–∏ –∑–º—ñ–Ω—É –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∫–ª—é—á–∞ —Ç–∞ –æ–Ω–æ–≤–∏—Ç–∏ summary —É –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞
        –ë–µ–∑ —Ü—å–æ–≥–æ ‚Äî summary –Ω–µ –æ–Ω–æ–≤–∏—Ç—å—Å—è –ø—ñ—Å–ª—è –∑–º—ñ–Ω–∏.
        –¢—É—Ç {1} –æ–Ω–æ–≤–ª—é—î summary, –∫–æ–ª–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –∑–º—ñ–Ω—é—î –∑–Ω–∞—á–µ–Ω–Ω—è. */
public class SettingsFragment extends PreferenceFragmentCompat // need to add dependency in build.gradle.kts
        implements SharedPreferences.OnSharedPreferenceChangeListener, Preference.OnPreferenceChangeListener {
    @Override
    public void onCreatePreferences(Bundle bundle, String s) {
        addPreferencesFromResource(R.xml.timer_preferences); // –ø—ñ–¥–∫–ª—é—á–∞—î XML-—Ñ–∞–π–ª –¥–æ —Ñ—Ä–∞–≥–º–µ–Ω—Ç–∞ —Ç–∞ —Å—Ç–≤–æ—Ä—é—î –µ–∫—Ä–∞–Ω —ñ–∑ 3-–º–∞ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è–º–∏: —á–µ–∫–±–æ–∫—Å, —Å–ø–∏—Å–æ–∫ ListPreference —ñ –ø–æ–ª–µ –≤–≤–æ–¥—É.

        SharedPreferences sharedPreferences = getPreferenceScreen()
                .getSharedPreferences();
        PreferenceScreen preferenceScreen = getPreferenceScreen();
        int count = preferenceScreen.getPreferenceCount(); // 3 —à—Ç—É–∫–∏: CheckBoxPreference, ListPreference, EditTextPreference
        Log.d("[class SettingsFragment:", " count =  " + count);

        for (int i = 0; i < count; i++) {
            // {1}:
            Preference preference = preferenceScreen.getPreference(i);

            if (!(preference instanceof CheckBoxPreference)) { // —Å–ø–∏—Å–æ–∫ —ñ –ø–æ–ª–µ –≤–≤–æ–¥—É, –∞–ª–µ –Ω–µ —á–µ–∫–±–æ–∫—Å
                String value = sharedPreferences.getString(preference.getKey(),""); // –û—Ç—Ä–∏–º—É—é—Ç—å—Å—è bell, alarm_siren, bip –¥–ª—è ListPreference —Ç–∞ —á–∏—Å–ª–∞ –¥–ª—è EditTextPreference
                Log.d("[class SettingsFragment:", " value =  " + value);
                setPreferenceLabel(preference, value);
            }
        }

        Preference preference = findPreference("default_interval");
        preference.setOnPreferenceChangeListener(this); // —Å–ª—É—Ö–∞—á –∑–º—ñ–Ω–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ—ó Preference - EditTextPreference (–ª–æ–∫–∞–ª—å–Ω–æ)
    }

    // –≤—Å—Ç–∞–Ω–æ–≤–ª—é—î—Ç—å—Å—è –ø—ñ–¥–ø–∏—Å –∑–Ω–∞—á–µ–Ω–Ω—è –ø—ñ–¥ –Ω–∞—Å—Ç—Ä–æ–π–∫–æ—é —Å–ø–∏—Å–∫–∞ –∞–±–æ –ø–æ–ª—è –≤–≤–æ–¥—É
    private void setPreferenceLabel(Preference preference, String value) {
        if (preference instanceof ListPreference) {
            ListPreference listPreference = (ListPreference) preference;
            int index = listPreference.findIndexOfValue(value);
            if (index >= 0) {
                listPreference.setSummary(listPreference.getEntries()[index]);
            }
        } else if (preference instanceof EditTextPreference) {
            preference.setSummary(value);
        }
    }

    @Override
    public void onSharedPreferenceChanged(SharedPreferences sharedPreferences, String key) {
        // {1}:
        Preference preference = findPreference(key);
        if (!(preference instanceof CheckBoxPreference)) {
            String value = sharedPreferences.getString(preference.getKey(), "");
            setPreferenceLabel(preference, value);
        }
    }

    // —Ä–µ–µ—î—Å—Ç—Ä—É—î–º–æ Listener –¥–ª—è —Å–ø–∏—Å–∫—É ListPreference, –¥–ª—è –≥–ª–æ–±–∞–ª—å–Ω–∏—Ö –∑–º—ñ–Ω
    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        getPreferenceScreen().getSharedPreferences().registerOnSharedPreferenceChangeListener(this);
    }

    // –ø—Ä–∏–±–∏—Ä–∞—î–º–æ Listener –¥–ª—è —Å–ø–∏—Å–∫—É ListPreference, –¥–ª—è –≥–ª–æ–±–∞–ª—å–Ω–∏—Ö –∑–º—ñ–Ω
    @Override
    public void onDestroy() {
        super.onDestroy();
        getPreferenceScreen().getSharedPreferences().unregisterOnSharedPreferenceChangeListener(this);
    }

    @Override
    public boolean onPreferenceChange(Preference preference, Object o) {

        Toast toast = Toast.makeText(getContext(), "Please enter an integer number", Toast.LENGTH_LONG);

        if (preference.getKey().equals("default_interval")) {
            String defaultIntervalString =(String) o;

            try {
                int defaultInterval = Integer.parseInt(defaultIntervalString);
            } catch (NumberFormatException nef) {
                toast.show();
                return false;
            }
        }

        return true;
    }
}

/* GPT { 1) –†—ñ–∑–Ω–∏—Ü—è –º—ñ–∂ `SharedPreferences.OnSharedPreferenceChangeListener` —Ç–∞ `Preference.OnPreferenceChangeListener`**

| –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞         | `SharedPreferences.OnSharedPreferenceChangeListener`              | `Preference.OnPreferenceChangeListener`           |
| ---------------------- | ----------------------------------------------------------------- | ------------------------------------------------- |
| **–©–æ —Å–ª—É—Ö–∞—î?**         | –ó–º—ñ–Ω–∏ **–±—É–¥—å-—è–∫–æ–≥–æ –∑–Ω–∞—á–µ–Ω–Ω—è** —É SharedPreferences (–≥–ª–æ–±–∞–ª—å–Ω–æ)     | –ó–º—ñ–Ω–∏ **–∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ—ó Preference** (–ª–æ–∫–∞–ª—å–Ω–æ)        |
| **–ö–æ–ª–∏ –≤–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è?** | –ü—ñ—Å–ª—è —Ç–æ–≥–æ, —è–∫ –∑–º—ñ–Ω–∞ –≤–∂–µ –≤—ñ–¥–±—É–ª–∞—Å—å —ñ –∑–±–µ—Ä–µ–∂–µ–Ω–∞                    | **–ü–µ—Ä–µ–¥** —Ç–∏–º, —è–∫ –∑–º—ñ–Ω–∞ –±—É–¥–µ –∑–±–µ—Ä–µ–∂–µ–Ω–∞            |
| **–©–æ –º–æ–∂–Ω–∞ –∑—Ä–æ–±–∏—Ç–∏?**  | –û–Ω–æ–≤–∏—Ç–∏ UI, –ª–æ–≥—ñ–∫—É, –ø–æ–≤—ñ–¥–æ–º–∏—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞                        | –í—ñ–¥–º—ñ–Ω–∏—Ç–∏ –∞–±–æ –º–æ–¥–∏—Ñ—ñ–∫—É–≤–∞—Ç–∏ –∑–Ω–∞—á–µ–Ω–Ω—è –¥–æ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è |
| **–ö—É–¥–∏ —Ä–µ—î—Å—Ç—Ä—É—î—Ç—å—Å—è?** | `sharedPreferences.registerOnSharedPreferenceChangeListener(...)` | `preference.setOnPreferenceChangeListener(...)`   |

#### üîç –£ —Ç–≤–æ—î–º—É –∫–æ–¥—ñ:

* `OnSharedPreferenceChangeListener` ‚Äî —Å–ª—É—Ö–∞—î **–≤—Å—ñ –∑–º—ñ–Ω–∏**, —â–æ–± –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –æ–Ω–æ–≤–ª—é–≤–∞—Ç–∏ summary (—Ç–µ–∫—Å—Ç –ø—ñ–¥ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è–º) –ø—ñ—Å–ª—è –∑–º—ñ–Ω–∏.
* `OnPreferenceChangeListener` ‚Äî –ª–∏—à–µ –Ω–∞ `default_interval`, —â–æ–± **–ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏**, —á–∏ —Ü–µ –≤–∞–ª—ñ–¥–Ω–µ —á–∏—Å–ª–æ –ø–µ—Ä–µ–¥ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è–º (–≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è —è–∫ –≤–∞–ª—ñ–¥–∞—Ü—ñ—è).

### ‚úÖ **2) –ß–æ–º—É –≤ `onDestroy()` –ø–æ—Ç—Ä—ñ–±–Ω–æ –∑–Ω—ñ–º–∞—Ç–∏ `OnSharedPreferenceChangeListener`**

–¶–µ **–¥—É–∂–µ –≤–∞–∂–ª–∏–≤–æ** –∑ —Ç–æ—á–∫–∏ –∑–æ—Ä—É –ø–∞–º‚Äô—è—Ç—ñ —Ç–∞ –±–µ–∑–ø–µ–∫–∏:

* –ö–æ–ª–∏ —Ñ—Ä–∞–≥–º–µ–Ω—Ç –∑–Ω–∏—â—É—î—Ç—å—Å—è, —Å–ª—É—Ö–∞—á –∑–∞–ª–∏—à–∞—î—Ç—å—Å—è –ø—Ä–∏–≤'—è–∑–∞–Ω–∏–º –¥–æ `SharedPreferences`, **—è–∫—â–æ –π–æ–≥–æ –Ω–µ –∑–Ω—è—Ç–∏**.
* –¶–µ –º–æ–∂–µ —Å–ø—Ä–∏—á–∏–Ω–∏—Ç–∏ **–≤–∏—Ç—ñ–∫ –ø–∞–º'—è—Ç—ñ (memory leak)**, –±–æ —Å–ª—É—Ö–∞—á —Ç—Ä–∏–º–∞—î –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ —Ñ—Ä–∞–≥–º–µ–Ω—Ç, —è–∫–∏–π —É–∂–µ –º–∞–≤ –±–∏ –±—É—Ç–∏ –∑–Ω–∏—â–µ–Ω–∏–π.
* Android –Ω–µ –∑–Ω—ñ–º–∞—î —Ç–∞–∫–∏—Ö —Å–ª—É—Ö–∞—á—ñ–≤ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ ‚Äî —Ç—Ä–µ–±–∞ –≤—Ä—É—á–Ω—É.

üîß **–ü—ñ–¥—Å—É–º–æ–∫:** –∑–∞–≤–∂–¥–∏ –∑–Ω—ñ–º–∞–π `OnSharedPreferenceChangeListener` –≤ `onDestroy()` –∞–±–æ —Ä–∞–Ω—ñ—à–µ, –∫–æ–ª–∏ —Ñ—Ä–∞–≥–º–µ–Ω—Ç –±—ñ–ª—å—à–µ –Ω–µ –ø–æ—Ç—Ä—ñ–±–µ–Ω.

### ‚úÖ **3) –ß–æ–º—É `OnPreferenceChangeListener` –Ω–µ –∑–Ω—ñ–º–∞—î—Ç—å—Å—è –≤—Ä—É—á–Ω—É?**

–¢—É—Ç –≤—Å–µ –ø—Ä–æ—Å—Ç—ñ—à–µ:

* `Preference.OnPreferenceChangeListener` —Ä–µ—î—Å—Ç—Ä—É—î—Ç—å—Å—è **–Ω–∞ –æ–¥–∏–Ω –∫–æ–Ω–∫—Ä–µ—Ç–Ω–∏–π –æ–±‚Äô—î–∫—Ç `Preference`**.
* –ö–æ–ª–∏ —Ñ—Ä–∞–≥–º–µ–Ω—Ç –∞–±–æ –µ–∫—Ä–∞–Ω –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å –∑–∞–∫—Ä–∏–≤–∞—î—Ç—å—Å—è, Android **–∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –∑–≤—ñ–ª—å–Ω—è—î** –≤—Å—ñ –æ–±‚Äô—î–∫—Ç–∏ `Preference` (–æ—Å–∫—ñ–ª—å–∫–∏ —Ü–µ —á–∞—Å—Ç–∏–Ω–∞ `PreferenceFragmentCompat`).
* **–ù–µ –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤—Ä—É—á–Ω—É –∑–Ω—ñ–º–∞—Ç–∏** —Ü–µ–π —Å–ª—É—Ö–∞—á, –±–æ –æ–±‚Äô—î–∫—Ç `Preference` —Å–∞–º –∑–Ω–∏—â—É—î—Ç—å—Å—è.

üîß **–ü—ñ–¥—Å—É–º–æ–∫:** `setOnPreferenceChangeListener` ‚Äî —Ü–µ —è–∫ –¥–æ–¥–∞–≤–∞–Ω–Ω—è –æ–±—Ä–æ–±–Ω–∏–∫–∞ –ø–æ–¥—ñ—ó –¥–æ –∫–Ω–æ–ø–∫–∏. –ô–æ–≥–æ –∑–Ω—ñ–º–∞—Ç–∏ –Ω–µ–æ–±–æ–≤‚Äô—è–∑–∫–æ–≤–æ, –±–æ –≤—ñ–Ω –∂–∏–≤–µ —Ä–∞–∑–æ–º —ñ–∑ UI.

### üîÅ –©–æ –≤—ñ–¥–±—É–≤–∞—î—Ç—å—Å—è –≤ —Ç–≤–æ—î–º—É —Ñ—Ä–∞–≥–º–µ–Ω—Ç—ñ

| –ü–æ–¥—ñ—è                                             | –°–ª—É—Ö–∞—á                             | –©–æ –≤—ñ–¥–±—É–≤–∞—î—Ç—å—Å—è                                  |
| ------------------------------------------------- | ---------------------------------- | ------------------------------------------------ |
| –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –Ω–æ–≤–æ–≥–æ –∑–Ω–∞—á–µ–Ω–Ω—è –≤ `default_interval` | `OnPreferenceChangeListener`       | –ü–µ—Ä–µ–≤—ñ—Ä—è—î—Ç—å—Å—è, —á–∏ –∑–Ω–∞—á–µ–Ω–Ω—è ‚Äî —Ü–µ —Ü—ñ–ª–µ —á–∏—Å–ª–æ       |
| –ü—ñ—Å–ª—è –∑–º—ñ–Ω–∏ –±—É–¥—å-—è–∫–æ–≥–æ —ñ–Ω—à–æ–≥–æ –ø–æ–ª—è                | `OnSharedPreferenceChangeListener` | –û–Ω–æ–≤–ª—é—î—Ç—å—Å—è summary –¥–ª—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å              |
| –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—è —Ñ—Ä–∞–≥–º–µ–Ω—Ç—É                              | `onDestroy()`                      | –ó–Ω—ñ–º–∞—î—Ç—å—Å—è –≥–ª–æ–±–∞–ª—å–Ω–∏–π —Å–ª—É—Ö–∞—á `SharedPreferences` |

### üîö –í–∏—Å–Ω–æ–≤–æ–∫:

1. –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è **–¥–≤–æ—Ö —Å–ª—É—Ö–∞—á—ñ–≤ –ª–æ–≥—ñ—á–Ω–æ –æ–±“ë—Ä—É–Ω—Ç–æ–≤–∞–Ω–µ**: –æ–¥–∏–Ω –¥–ª—è –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó, —ñ–Ω—à–∏–π –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è UI.
2. **–ó–Ω—ñ–º–∞—Ç–∏ –ø–æ—Ç—Ä—ñ–±–Ω–æ –ª–∏—à–µ `OnSharedPreferenceChangeListener`**, –±–æ –≤—ñ–Ω –ø—Ä–∏–≤‚Äô—è–∑–∞–Ω–∏–π –¥–æ –æ–±‚Äô—î–∫—Ç–∞ –ø–æ–∑–∞ UI.
3. **`OnPreferenceChangeListener` –Ω–µ –ø–æ—Ç—Ä–µ–±—É—î –∑–Ω—è—Ç—Ç—è**, –±–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –∑–Ω–∏–∫–∞—î —Ä–∞–∑–æ–º —ñ–∑ Preference.
#####################################################################################################################################################################
## üîÅ 1. –ß–æ–º—É –¥–ª—è `EditTextPreference` –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—Ç—å **–ª–æ–∫–∞–ª—å–Ω–∏–π** `OnPreferenceChangeListener`, –∞ –Ω–µ –≥–ª–æ–±–∞–ª—å–Ω–∏–π `OnSharedPreferenceChangeListener`?
### üîπ –¢–æ–º—É —â–æ `OnPreferenceChangeListener` —Å–ø—Ä–∞—Ü—å–æ–≤—É—î **–¥–æ —Ç–æ–≥–æ**, —è–∫ –∑–Ω–∞—á–µ–Ω–Ω—è –±—É–¥–µ –∑–±–µ—Ä–µ–∂–µ–Ω–æ.
–¶–µ –¥–æ–∑–≤–æ–ª—è—î:
* **–ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –∞–±–æ –æ–±–º–µ–∂–∏—Ç–∏** –≤–≤–µ–¥–µ–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è.
* **–ó–∞–±–æ—Ä–æ–Ω–∏—Ç–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è**, —è–∫—â–æ –∑–Ω–∞—á–µ–Ω–Ω—è –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω–µ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, –Ω–µ —á–∏—Å–ª–æ).
### üîπ –ê –æ—Ç `OnSharedPreferenceChangeListener` —Å–ø—Ä–∞—Ü—å–æ–≤—É—î **–ø—ñ—Å–ª—è** –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è ‚Äî –≤—ñ–Ω –ø—Ä–æ—Å—Ç–æ –ø–æ–≤—ñ–¥–æ–º–ª—è—î: "–©–æ—Å—å –∑–º—ñ–Ω–∏–ª–æ—Å—å".
## ‚úÖ –ü—Ä–∏–∫–ª–∞–¥ –∑ `EditTextPreference`
java
@Override
public boolean onPreferenceChange(Preference preference, Object newValue) {
    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —á–∏ —Ü–µ —á–∏—Å–ª–æ
    try {
        int val = Integer.parseInt((String) newValue);
    } catch (NumberFormatException e) {
        Toast.makeText(getContext(), "Please enter a number", Toast.LENGTH_LONG).show();
        return false; // ‚ùå –ó–∞–±–æ—Ä–æ–Ω—è—î–º–æ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è
    }
    return true; // ‚úÖ –î–æ–∑–≤–æ–ª—è—î–º–æ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è
}
–ë–µ–∑ —Ü—å–æ–≥–æ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ `SharedPreferences` –≤–∂–µ –± –∑–±–µ—Ä—ñ–≥–ª–æ, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥, `"abc"`, —â–æ –ø—Ä–∏–∑–≤–µ–ª–æ –± –¥–æ –ø–æ–º–∏–ª–∫–∏ –ø—Ä–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—ñ.
## üß† 2. –ß–æ–º—É –¥–ª—è `ListPreference` —ñ `CheckBoxPreference` **–Ω–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—Ç—å –ª–æ–∫–∞–ª—å–Ω–∏–π OnPreferenceChangeListener**?
–ë–æ:
* –í–æ–Ω–∏ –∑–∞–∑–≤–∏—á–∞–π –º–∞—é—Ç—å **–æ–±–º–µ–∂–µ–Ω–∏–π –Ω–∞–±—ñ—Ä –ø—Ä–∞–≤–∏–ª—å–Ω–∏—Ö –∑–Ω–∞—á–µ–Ω—å** (checkbox: true/false, list: –∑ –Ω–∞–ø–µ—Ä–µ–¥ –∑–∞–¥–∞–Ω–∏–º–∏ –ø—É–Ω–∫—Ç–∞–º–∏).
* –¢–∞–º **–≤–∞–∂–∫–æ –≤–≤–µ—Å—Ç–∏ —â–æ—Å—å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–µ**, —Ç–æ–º—É **–ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –Ω–µ –ø–æ—Ç—Ä—ñ–±–Ω—ñ**.
* –î–æ—Å—Ç–∞—Ç–Ω—å–æ –ø—Ä–æ—Å—Ç–æ **–ø–æ–∫–∞–∑–∞—Ç–∏ summary –ø—ñ—Å–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è** ‚Äî —ñ —Ç—É—Ç —è–∫—Ä–∞–∑ —ñ–¥–µ–∞–ª—å–Ω–æ –ø—ñ–¥—Ö–æ–¥–∏—Ç—å –≥–ª–æ–±–∞–ª—å–Ω–∏–π `OnSharedPreferenceChangeListener`.

## üîÅ –û—Ç–∂–µ, —É –¥–≤–æ—Ö —Å–ª–æ–≤–∞—Ö:

| Preference              | –©–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î                    | –ù–∞–≤—ñ—â–æ                        |
| ----------------------- | ---------------------------------- | ----------------------------- |
| ‚úÖ `CheckBoxPreference`  | `OnSharedPreferenceChangeListener` | –ü—Ä–æ—Å—Ç–æ –æ–Ω–æ–≤–∏—Ç–∏ UI –ø—ñ—Å–ª—è –∑–º—ñ–Ω–∏ |
| ‚úÖ `ListPreference`      | `OnSharedPreferenceChangeListener` | –û–Ω–æ–≤–∏—Ç–∏ label/summary         |
| üîí `EditTextPreference` | `OnPreferenceChangeListener`       | –í–∞–ª—ñ–¥—É–≤–∞—Ç–∏ –ø–µ—Ä–µ–¥ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è–º  |
} */